{"version":3,"sources":["components/NavBar/NavBar.js","components/JumboGreeting/JumboGreeting.js","components/Footer/Footer.js","components/MainArea/main.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","console","log","react_default","a","createElement","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabindex","aria-disabled","Jumbo","Footer","Main","App","className","NavBar_NavBar","JumboGreeting","main","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wPAiCeA,MA/Bf,SAAgBC,GAGZ,OAFAC,QAAQC,IAAIF,GAGZG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iDACPH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,eAAeC,KAAK,KAA7B,UACAJ,EAAAC,EAAAC,cAAA,UAAQC,MAAM,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACpJV,EAAAC,EAAAC,cAAA,QAAMC,MAAM,yBAEhBH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,2BAA2BQ,GAAG,aACrCX,EAAAC,EAAAC,cAAA,MAAIC,MAAM,cACVH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,mBACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWC,KAAK,KAAzB,QAAkCJ,EAAAC,EAAAC,cAAA,QAAMC,MAAM,WAAZ,eAEtCH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,YACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWC,KAAK,KAAzB,aAEJJ,EAAAC,EAAAC,cAAA,MAAIC,MAAM,YACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,WAAWC,KAAK,KAAzB,YAEJJ,EAAAC,EAAAC,cAAA,MAAIC,MAAM,YACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,oBAAoBC,KAAK,IAAIQ,SAAS,KAAKC,gBAAc,QAAlE,wBCNLC,MAff,SAAejB,GAGX,OAFAC,QAAQC,IAAIF,GAGZG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,6BACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACPH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,aAAV,mBACAH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,QAAT,+JCMDY,MAff,SAAgBlB,GAGZ,OAFAC,QAAQC,IAAIF,GAGZG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,MAAM,4CACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qCAAX,uBACIH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,kCAAR,iCCIDY,MAVf,SAAcnB,GAGV,OAFAC,QAAQC,IAAIF,GAGZG,EAAAC,EAAAC,cAAA,aCoBWe,MApBf,WAEI,OACEjB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WACblB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,eACblB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,cAEflB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,QACflB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,QAGFrB,EAAAC,EAAAC,cAACoB,EAAD,QCRYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c976db74.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NavBar(props) {\r\n    console.log(props);\r\n\r\n    return (\r\n    <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\">Features</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </div>    \r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbo(props) {\r\n    console.log(props);\r\n\r\n    return (\r\n    <div>\r\n        <div class=\"jumbotron jumbotron-fluid\">\r\n            <div class=\"container\">\r\n                <h1 class=\"display-4\">Creature Recall</h1>\r\n                <p class=\"lead\">Try for a high score. All you need to do is click on each unique creature without repeating. Can you click them all without making a mistake? Lets see!</p>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n    );\r\n}\r\n\r\nexport default Jumbo;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n    console.log(props);\r\n\r\n    return (\r\n    <div>\r\n        <footer class=\"page-footer font-small blue fixed-bottom\">\r\n            <div class=\"footer-copyright text-center py-3\">Â© 2018 Copyright:\r\n                <a href=\"https://circuitsyn.github.com/\"> CreatureRecall.com</a>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Main(props) {\r\n    console.log(props);\r\n\r\n    return (\r\n    <div>\r\n        \r\n    </div>    \r\n    );\r\n}\r\n\r\nexport default Main;\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from 'components/NavBar/NavBar';\nimport Jumbo from 'components/JumboGreeting/JumboGreeting';\nimport Footer from 'components/Footer/Footer';\nimport MainArea from 'components/MainArea/main';\n\nfunction App() {\n  \n    return (\n      <div className=\"appSite\">\n        <NavBar />\n        <div className=\"siteContent\">\n          <div className=\"appHeader\">\n          </div>\n          <div className=\"main\">\n          <Jumbo />\n          <MainArea />\n          </div>\n        </div>  \n        <Footer />\n      </div>  \n      \n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}